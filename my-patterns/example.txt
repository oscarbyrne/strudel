/*
  Reference: https://mtosmt.org/issues/mto.19.25.2/mto.19.25.2.plotkin.html
  Composing Chord Progressions with Filtered Point-Symmetry
*/

const chords = "<0 1 2 3>".pick(
  new FiPS(
    [12, 12, 7, 7, 3],
    [0, 9, 0, 6]
  ).chain([
    [+1, -1, -1, +1],
    [+1,  0, +1, +1],
    [ 0, -1, +1, +1]
  ])
)
const scales = chords.fmap(
  (chord) => chord.outer
)

const ensemble = {
  violin: (n) => (pattern) => pattern.s('gm_pizzicato_strings').n([3, 2, 4].at(n)),
  cello:         (pattern) => pattern.s('gm_cello').adsr(".7:.2:.8:.1"),
  piano:         (pattern) => pattern.s('piano'),
  oboe:          (pattern) => pattern.s('gm_oboe').adsr(".1:0:.8:.1"),
}

const plucks = stack(
  ensemble.violin(0)("2(3,8,0)".chord(chords, 5)),
  ensemble.violin(1)("1(3,8,1)".chord(chords, 4)),
  ensemble.violin(2)("0(3,8,2)".chord(chords, 4)),
)
const bassline = ensemble.cello(
  "0(3,4,0)/2"
  .chord(chords, 4)
)
const piano1 = ensemble.piano(
  "~ 4 ~ [2 4 6]".add("<0 4>")
  .chord(scales, 6)
)
const piano2 = ensemble.piano(
  "~ [0, 5, 6]"
  .chord(chords, 5)
)
const melody = ensemble.oboe(
  "[4@3 2]@2 <~ [~ 2 3]>".add("<0 5 0 3>").slow(2)
  .chord(scales, 4)
)

arrange(
  [8, "<0@6 1@2>".pick([
    stack(plucks),
    stack(plucks, bassline),
  ])],
  [8, "<0>".pick([
    stack(plucks, bassline, piano1, piano2),
  ])],
  [8, "<0 1@3>".pick([
    stack(plucks, bassline,         piano2, melody),
    stack(plucks, bassline, piano1, piano2, melody),
  ])],
  [8, "<0@4 1@2 2@2>".pick([
    stack(plucks,           piano1, piano2, melody),
    stack(                          piano2, melody),
    stack(                                  melody),
  ])]
).room(0.5)

